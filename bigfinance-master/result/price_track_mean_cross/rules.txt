 _meta_stra_name = 'price_track_mean_cross'
    for w in [5,10,20,40,80]:
        _Expression =['close#close_EMA_'+str(w)+'_3&cross','close#close_EMA_'+str(w)+'_-3&cross','close#close_EMA_'+str(w)+'&cross']
#operation
def get_operation(self,):
        if(not self.now_bar.empty):
            if((self.l_or_s == 'long' and self.expre_Sig[2] == 1)
                or(self.l_or_s == 'short' and self.expre_Sig[2] == 2)): #加入全局风控
                self.operation = 'sell'
            elif(self.expre_Sig[0] == 2): #or self.expre_Sig[2] == 2):
                self.operation = 'long'
            elif(self.expre_Sig[1] == 1): #加入全局风控
                self.operation = 'short'
            else:
                self.operation = 'noo'
        return self.operation
#买变成用今天信号
_worth.expre_Sig = copy.copy(self.Sig.expre_sig[_code])#今天的信号

#buy
if(_worth.date in _worth.trade_date_list and 
                (_opera == 'long' or _opera == 'short') 
                and _worth.code not in self.hbsl):
                self.tbsl.append(_code)    
                self.tbsW.append(_worth)
#sell
_operation = _worth.get_operation()
            #print('sell_opearation',self._nowdate,_code,_operation)
            if(_worth.now_date in _worth.trade_date_list and 
                ( _worth.get_operation() == 'sell' and _worth.sell_due <= 0
                or _code not in self.ccsl)): #出现卖的信号或者换仓的时候平仓
                self.tssl.append(_code)
                self.write_one_code_result(_code,'sell')